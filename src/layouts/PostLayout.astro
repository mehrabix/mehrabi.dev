---
import { type BlogSchema } from "../content/config";
import BaseLayout from "./BaseLayout.astro";
import dayjs from "dayjs";
import localizedFormat from "dayjs/plugin/localizedFormat";

export interface Props extends BlogSchema {}

const { title, description, pubDate, updatedDate, heroImage, badge, tags = [] } = Astro.props;
dayjs.extend(localizedFormat);
const displayDate = dayjs(pubDate).format("ll");
import { Image } from "astro:assets";
---

<BaseLayout title={title} description={description} image={heroImage} ogType="article">
  <main class="flex justify-center mt-10">
    <article class="max-w-3xl w-full px-6 py-10 space-y-8">
      {heroImage && (
        <Image
          width={750}
          height={422}
          format="webp"
          src={heroImage}
          alt={title}
          class="rounded-lg w-full mb-6 shadow-sm"
        />
      )}
      <h1 class="text-4xl font-bold tracking-tight mb-4 text-gray-900">{title}</h1>
      {pubDate && <time class="text-sm text-gray-500">{displayDate}</time>}
      
      {badge && <div class="inline-block bg-indigo-600 text-white text-sm rounded-md px-3 py-1 mt-2">{badge}</div>}
      
      {tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mt-4">
          {tags.map((tag) => (
            <a
              href={`/blog/tag/${tag}`}
              class="text-sm text-indigo-600 bg-indigo-50 rounded-md px-2 py-1 no-underline hover:bg-indigo-100"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
      
      {updatedDate && (
        <div class="text-sm text-gray-400 mt-4">
          Last updated on <time>{updatedDate}</time>
        </div>
      )}
      
      <hr class="border-t border-gray-200 my-6" />
      <slot />
    </article>
  </main>
</BaseLayout>
